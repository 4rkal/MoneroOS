# Load partition table and file system modules
insmod part_gpt
insmod part_msdos
insmod fat
insmod iso9660
insmod ntfs
insmod ntfscomp
insmod exfat
insmod udf

# Use graphics-mode output
insmod all_video
insmod font
if loadfont "${prefix}/fonts/unicode.pf2" ; then
    set gfxmode="auto"
    terminal_input console
    terminal_output console
fi

# Enable serial console
if serial --unit=0 --speed=115200; then
    terminal_input --append serial
    terminal_output --append serial
fi

# Set grub root
search --no-floppy --set=root --label %ESP_LABEL%

# Set default menu entry
default=persistent
timeout=15
timeout_style=menu

# Menu entries

menuentry "Archuseriso %DESKTOP% (x86_64, UEFI): persistence" --class arch --class gnu-linux --class gnu --class os --id 'persistent' {
    set gfxpayload=keep
    linux /vmlinuz-linux archisobasedir=%INSTALL_DIR% archisolabel=%ARCHISO_LABEL% cow_label=%COW_LABEL% cow_flags=%COW_FLAGS% overlay.index=0
    initrd /intel-ucode.img /amd-ucode.img /initramfs-linux.img
}

menuentry "Archuseriso %DESKTOP% (x86_64, UEFI): to ram & persistence" --class arch --class gnu-linux --class gnu --class os --id 'ram-persistent' {
    set gfxpayload=keep
    linux /vmlinuz-linux archisobasedir=%INSTALL_DIR% archisolabel=%ARCHISO_LABEL% cow_label=%COW_LABEL% cow_flags=%COW_FLAGS% overlay.index=0 copytoram
    initrd /intel-ucode.img /amd-ucode.img /initramfs-linux.img
}

menuentry "Archuseriso %DESKTOP% (x86_64, UEFI): live" --class arch --class gnu-linux --class gnu --class os --id 'live' {
    set gfxpayload=keep
    linux /%INSTALL_DIR%/boot/x86_64/vmlinuz-linux archisobasedir=%INSTALL_DIR% archisolabel=%ARCHISO_LABEL%
    initrd /%INSTALL_DIR%/boot/intel-ucode.img /%INSTALL_DIR%/boot/amd-ucode.img /%INSTALL_DIR%/boot/x86_64/initramfs-linux.img
}

menuentry "Archuseriso %DESKTOP% (x86_64, UEFI): live console" --class arch --class gnu-linux --class gnu --class os --id 'console' {
    set gfxpayload=keep
    linux /%INSTALL_DIR%/boot/x86_64/vmlinuz-linux archisobasedir=%INSTALL_DIR% archisolabel=%ARCHISO_LABEL% systemd.unit=multi-user.target
    initrd /%INSTALL_DIR%/boot/intel-ucode.img /%INSTALL_DIR%/boot/amd-ucode.img /%INSTALL_DIR%/boot/x86_64/initramfs-linux.img
}

menuentry "Archuseriso %DESKTOP% (x86_64, UEFI): live to ram" --class arch --class gnu-linux --class gnu --class os --id 'ram' {
    set gfxpayload=keep
    linux /%INSTALL_DIR%/boot/x86_64/vmlinuz-linux archisobasedir=%INSTALL_DIR% archisolabel=%ARCHISO_LABEL% copytoram
    initrd /%INSTALL_DIR%/boot/intel-ucode.img /%INSTALL_DIR%/boot/amd-ucode.img /%INSTALL_DIR%/boot/x86_64/initramfs-linux.img
}

if [ "${grub_platform}" == "efi" ]; then
    if [ "${grub_cpu}" == "x86_64" ]; then
        menuentry "Run Memtest86+ (RAM test)" --class memtest86 --class memtest --class gnu --class tool {
            set gfxpayload=800x600,1024x768
            linux /memtest86+/memtest.efi
        }
        menuentry "UEFI Shell" --class efi {
            insmod chain
            chainloader /shellx64.efi
        }
    elif [ "${grub_cpu}" == "i386" ]; then
        menuentry "UEFI Shell" --class efi {
            insmod chain
            chainloader /shellia32.efi
        }
    fi

    menuentry 'UEFI Firmware Settings' --id 'uefi-firmware' {
        fwsetup
    }
fi

menuentry "System shutdown" --class shutdown --class poweroff {
    echo "System shutting down..."
    halt
}

menuentry "System restart" --class reboot --class restart {
    echo "System rebooting..."
    reboot
}
